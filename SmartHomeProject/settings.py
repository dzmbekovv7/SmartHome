"""
Django settings for SmartHomeProject project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0)4ssvh(o(rt$2huxk-j$u5o&&d#8bmqwm2(mkb(o*@(*=pm-v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'realestate',
    'rest_framework',
    'corsheaders',
    'apiauth',
    'houses',
    'chat',
    'agents',
    'channels',
    'rest_framework_simplejwt.token_blacklist',

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=7),  # токен будет жить 7 дней
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
}
ROOT_URLCONF = 'SmartHomeProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SmartHomeProject.wsgi.application'
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-chatbot-cache',
    }
}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'smarthome',         # Your PostgreSQL database name
        'USER': 'postgres',   # Your PostgreSQL username
        'PASSWORD': 'Aziret7bklass',    # Your PostgreSQL password
        'HOST': 'localhost',            # Or use your DB host
        'PORT': '5432',                 # Default PostgreSQL port
    }
}
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'EXCEPTION_HANDLER': 'apiauth.views.custom_exception_handler',  # путь к кастомному хендлеру

}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.authapi.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.authapi.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.authapi.password_validation.NumericPasswordValidator',
    },
]

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True
# settings.py


CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Vite dev server
]

CORS_ALLOW_CREDENTIALS = True

USE_TZ = True
OPENAI_API_KEY = "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"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
import os
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'realestate/static')]
AUTH_USER_MODEL = 'apiauth.User'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

TEMPLATES[0]['DIRS'] = [os.path.join(BASE_DIR, 'realestate/templates')]
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
CORS_ALLOW_ALL_ORIGINS = True  # временно, для разработки
ASGI_APPLICATION = 'SmartHomeProject.asgi.application'  # Replace with your actual project name

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


import os

# Email backend settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Gmail SMTP server
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

# Your Gmail credentials
EMAIL_HOST_USER = 'aziretdzumabekov19@gmail.com'  # or use environment variable
EMAIL_HOST_PASSWORD = 'gsom anii vqsb ntnw'   # this should be a Gmail App Password

# Optional custom email sender name
DEFAULT_FROM_EMAIL = 'SweetHome <aziretdzumabekov19@gmail.com>'
